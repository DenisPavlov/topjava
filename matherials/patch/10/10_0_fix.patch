Index: src/main/java/ru/javawebinar/topjava/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/service/UserService.java	(revision 311b36911e12f721c101bbf3b6ea0c1dfbe710bb)
+++ src/main/java/ru/javawebinar/topjava/service/UserService.java	(date 1586954982563)
@@ -66,7 +66,8 @@
     @Transactional
     public void update(UserTo userTo) {
         User user = get(userTo.id());
-        repository.save(UserUtil.updateFromTo(user, userTo));
+        User updatedUser = UserUtil.updateFromTo(user, userTo);
+        repository.save(updatedUser);   // !! need only for JDBC implementation
     }
 
     @CacheEvict(value = "users", allEntries = true)
Index: src/main/java/ru/javawebinar/topjava/web/user/AdminUIController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/user/AdminUIController.java	(revision 311b36911e12f721c101bbf3b6ea0c1dfbe710bb)
+++ src/main/java/ru/javawebinar/topjava/web/user/AdminUIController.java	(date 1586954957229)
@@ -24,7 +24,7 @@
 
     @Override
     @GetMapping(value = "/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
-    public User get(@PathVariable("id") int id) {
+    public User get(@PathVariable int id) {
         return super.get(id);
     }
 
